// let arr = new Array();
// let arr = [];

// let fruits = ["Яблоко", "Апельсин", "Слива"];
// console.log(fruits[0]); // Яблоко
// console.log(fruits[1]); // Апельсин
// console.log(fruits[2]); // Слива

// fruits[2] = "Груша"
// console.log(fruits[2]); // Груша заменили

// fruits[3] = "Лимон"
// console.log(fruits[3]); // Груша добавили

// console.log(fruits.length); // 3
// console.log(fruits); // ["Яблоко", "Апельсин", "Слива"]

// let arr = ['Яблоко', { name: 'Джон' }, true, function () { alert('привет'); }];

// console.log(arr[1].name) //Джон
// arr[3]() // вызовит функцию

/*=================pop/push,shift/unshift===================*/
// push добавляет элемент в конец.
// shift удаляет элемент в начале, сдвигая очередь, так что второй элемент становится первым.
// let fruits = ["Яблоко", "Апельсин", "Слива"];
// console.log(fruits.push("Лимон"))
// console.log(fruits)
// console.log(fruits.shift())
// console.log(fruits)
// console.log(fruits.pop()) // удаляем "Слива" и выводим его
// console.log(fruits) // ["Яблоко", "Апельсин"]
// fruits.push("Банан", "Персик")
// fruits.unshift("Помидор", "Огурец")

// console.log(fruits) // ["Помидор", "Огурец", "Яблоко", "Апельсин", "Слива", "Банан", "Персик"]

/*=========================================================*/
// let arr = [1, 2, 3, 4, 5];

// arr.length = 2; // укорачиваем до двух элементов
// console.log(arr); // [1, 2]

// arr.length = 5; // возвращаем length как было
// console.log(arr[3]); // undefined: значения не восстановились

/*=========================================================*/
// console.log([] + 1); // "1"
// console.log([1] + 1); // "11"
// console.log([1, 2] + 1); // "1,21"
// console.log("" + 1); // "1"
// console.log("1" + 1); // "11"
// console.log("1,2" + 1); // "1,21"

/*=========================================================*/
/*
var a = [1, 2, 3];
function test(b) {
  b.push(4);
}
test(a);
console.log(a) // [1, 2, 3, 4]
*/
/*=========================================================*/
/*
var arr = ['1', '2', '3'].map(parseInt);
console.log(arr) // [1, NaN, NaN]
//Array.prototype.map передает в функцию-коллбэк 3 аргумента: элемент массива, индекс элемента и сам массив. А у parseInt 2 аргумента: число или подобное ему и система счисления.
*/
/*=========================================================*/
/*
var a = [];
console.log((a == a) + ' ' + (a == !a)); //true true
//В первом выражении все понятно, идет сравнение ссылки с самой собой. А во втором операнд "!a" преобразовывается к boolean и соответственно порождает преобразование к boolean операнда "a". []==false (пустой массив => false), ![]==false (ссылка на объект (в данном случае на массив) с оператором ! => false) т.е. [] == ![]
*/
/*=========================================================*/

